syntax = "proto3";

package user;

option go_package = "github.com/rednek21/SKMEnergoProto/gen/go/proto/user;user";

import "common/common.proto";

service UserService {
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
  rpc GetAllUsers (GetAllUsersRequest) returns (GetAllUsersResponse);
  rpc GetUserByID (GetUserByIDRequest) returns (GetUserByIDResponse);
  rpc GetByUsername (GetByUsernameRequest) returns (GetByUsernameResponse);
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);
  rpc ResetPasswordConfirmed (ResetPasswordConfirmedRequest) returns (ResetPasswordConfirmedResponse);
  rpc VerifyUserCredentials(VerifyUserCredentialsRequest) returns (VerifyUserCredentialsResponse);
  rpc ConfirmEmail(ConfirmEmailRequest) returns (ConfirmEmailResponse);

  rpc CheckUsernameExistence (CheckUsernameExistenceRequest) returns (CheckUsernameExistenceResponse);
  rpc CheckEmailExistence (CheckEmailExistenceRequest) returns (CheckEmailExistenceResponse);

  rpc GetAllRoles (GetAllRolesRequest) returns (GetAllRolesResponse);
  rpc GetAllPermissions (GetAllPermissionsRequest) returns (GetAllPermissionsResponse);
}

message CreateUserRequest {
  string username = 1;
  string password_hash = 2;
  string email = 3;
}
message CreateUserResponse {
  string username = 1;
  repeated string roles = 2;
  repeated string permissions = 3;
}

message GetAllUsersRequest {}
message GetAllUsersResponse {
  repeated common.User users = 1;
}

message GetUserByIDRequest {
  int32 id = 1;
}
message GetUserByIDResponse {
  common.User user = 1;
}

message GetByUsernameRequest {
  string username = 1;
}
message GetByUsernameResponse {
  common.User user = 1;
}

message CheckUsernameExistenceRequest {
  string username = 1;
}
message CheckUsernameExistenceResponse {}

message CheckEmailExistenceRequest {
  string email = 1;
}
message CheckEmailExistenceResponse {}

message UpdateUserRequest {
  int32 target_user_id = 1;
  string requester_username = 2;
  optional string new_username = 3;
  optional string new_email = 4;
  optional string new_first_name = 5;
  optional string new_last_name = 6;
}
message UpdateUserResponse {
  common.User user = 1;
}

message ResetPasswordConfirmedRequest {
  string username = 1;
  string hashed_password = 2;
}
message ResetPasswordConfirmedResponse {
  string username = 1;
  repeated string roles = 2;
  repeated string permissions = 3;
}

message VerifyUserCredentialsRequest {
  string username = 1;
  string password = 2;
}
message VerifyUserCredentialsResponse {
  string username = 1;
  repeated string roles = 2;
  repeated string permissions = 3;
}

message ConfirmEmailRequest {
  string username = 1;
}
message ConfirmEmailResponse {}

message GetAllRolesRequest {}
message GetAllRolesResponse {
  repeated common.Role roles = 1;
}

message GetAllPermissionsRequest {}
message GetAllPermissionsResponse {
  repeated common.Permission permissions = 1;
}